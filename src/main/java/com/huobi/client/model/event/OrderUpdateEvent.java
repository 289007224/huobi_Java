package com.huobi.client.model.event;

import com.huobi.client.impl.ChannelParser;
import com.huobi.client.impl.RestApiJsonParser;
import com.huobi.client.impl.utils.JsonWrapper;
import com.huobi.client.impl.utils.TimeService;
import com.huobi.client.model.Order;

/**
 * The order update received by subscription of order update.
 */
public class OrderUpdateEvent {

  private String symbol;
  private long timestamp;
  private Order data = null;

  /**
   * Get the symbol you subscribed.
   *
   * @return The symbol, like "btcusdt".
   */
  public String getSymbol() {
    return symbol;
  }

  /**
   * Get the UNIX formatted timestamp generated by server in UTC.
   *
   * @return The timestamp.
   */
  public long getTimestamp() {
    return timestamp;
  }

  /**
   * Get the order detail.
   *
   * @return The order data, see {@link Order}
   */
  public Order getData() {
    return data;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public void setData(Order data) {
    this.data = data;
  }

  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
  }

  public static RestApiJsonParser<OrderUpdateEvent> getParser(String apiKey) {
    return (jsonWrapper) -> {
      String ch = jsonWrapper.getString("topic");
      ChannelParser parser = new ChannelParser(ch);
      OrderUpdateEvent orderUpdateEvent = new OrderUpdateEvent();
      orderUpdateEvent.setSymbol(parser.getSymbol());
      orderUpdateEvent.setTimestamp(TimeService.convertCSTInMillisecondToUTC(jsonWrapper.getLong("ts")));
      JsonWrapper data = jsonWrapper.getJsonObject("data");

      orderUpdateEvent.setData(Order.parserForWebSocket(data, parser.getSymbol(), apiKey));
      return orderUpdateEvent;
    };
  }
}
